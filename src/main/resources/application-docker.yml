server:
  port: 8085

spring:
  application:
    name: truck-management
  r2dbc:
    url: r2dbc:postgresql://postgres:5432/truck_management_db
    username: postgres_user
    password: root
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db-changelog.yml
    url: jdbc:postgresql://postgres:5432/truck_management_db
    user: postgres_user
    password: root
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: truck_management_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: "com.raul.truckmanagement.domain.model"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    admin:
      auto-create-topics: true
      topic:
        truckEvents:
          partitions: 1
          replicas: 1
    listener:
      missing-topics-fatal: false
    template:
      default-topic: truck-events
  sql:
    init:
      mode: always

logging:
  level:
    liquibase: INFO
    root: INFO
    org.springframework.web: INFO
    io.r2dbc.postgresql: INFO
    org.springframework.r2dbc: INFO
    org.springframework.data.r2dbc: INFO